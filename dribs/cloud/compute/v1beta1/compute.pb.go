// Code generated by protoc-gen-go. DO NOT EDIT.
// source: compute.proto

package compute

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The current status of the instance.
type Instance_Status int32

const (
	// Not set.
	Instance_STATUS_UNSPECIFIED Instance_Status = 0
	// The instance is being created and resources are being allocated for the instance.
	Instance_PROVISIONING Instance_Status = 1
	// Resources have been acquired and the instance is being prepared for first boot.
	Instance_STAGING Instance_Status = 2
	// The instance is running or is booting up.
	// One should be able to ssh into the instance soon, but not immediately after is enters this state.
	Instance_RUNNING Instance_Status = 3
	// The instance is being stopped.
	// This can be because of a request to stop the instance or there was a failure.
	// This is a temporary status and the instance will move to TERMINATED once the instance has stopped.
	Instance_STOPPING Instance_Status = 4
	// The instance is stopped, or the instance encountered a failure.
	// Restart the instance or delete it.
	Instance_TERMINATED Instance_Status = 5
)

var Instance_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "PROVISIONING",
	2: "STAGING",
	3: "RUNNING",
	4: "STOPPING",
	5: "TERMINATED",
}

var Instance_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"PROVISIONING":       1,
	"STAGING":            2,
	"RUNNING":            3,
	"STOPPING":           4,
	"TERMINATED":         5,
}

func (x Instance_Status) String() string {
	return proto.EnumName(Instance_Status_name, int32(x))
}

func (Instance_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{0, 0}
}

// Current status of the operation.
type Operation_Status int32

const (
	// Not set.
	Operation_STATUS_UNSPECIFIED Operation_Status = 0
	// The operation has been created.
	Operation_PENDING Operation_Status = 1
	// The operation is currently running.
	Operation_RUNNING Operation_Status = 2
	// The operation is done, either cancelled or completed.
	Operation_DONE Operation_Status = 3
	// The operation is aborting.
	Operation_ABORTING Operation_Status = 4
)

var Operation_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "PENDING",
	2: "RUNNING",
	3: "DONE",
	4: "ABORTING",
}

var Operation_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"PENDING":            1,
	"RUNNING":            2,
	"DONE":               3,
	"ABORTING":           4,
}

func (x Operation_Status) String() string {
	return proto.EnumName(Operation_Status_name, int32(x))
}

func (Operation_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{1, 0}
}

// Operation type.
type Operation_Type int32

const (
	// Not set.
	Operation_TYPE_UNSPECIFIED Operation_Type = 0
	// Instance create.
	Operation_CREATE_INSTANCE Operation_Type = 1
	// Instance delete.
	Operation_DELETE_INSTANCE Operation_Type = 2
)

var Operation_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "CREATE_INSTANCE",
	2: "DELETE_INSTANCE",
}

var Operation_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"CREATE_INSTANCE":  1,
	"DELETE_INSTANCE":  2,
}

func (x Operation_Type) String() string {
	return proto.EnumName(Operation_Type_name, int32(x))
}

func (Operation_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{1, 1}
}

// A Dribs Compute instance.
type Instance struct {
	// The globally unique id of this instance.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of this instance. The name must be unique within this project
	// and zone, and can be up to 40 characters with the following restrictions:
	//
	// * Lowercase letters, numbers, and hyphens only.
	// * Must start with a letter.
	// * Must end with a number or a letter.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// An optional description of this instance.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The time when the instance was created.
	CreateTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The current status of this instance.
	Status Instance_Status `protobuf:"varint,5,opt,name=status,proto3,enum=dribs.cloud.compute.v1beta1.Instance_Status" json:"status,omitempty"`
	// Additional information about the current status of this instance, if available.
	StatusMessage string `protobuf:"bytes,6,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	// The time when the instance will be automatically deleted, if available.
	// This timestamp is an approximation of when the actual action to delete this instance is triggered.
	ExpireTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	// The name of the zone in which the instance resides.
	// Zone names always contain the region name.
	Zone string `protobuf:"bytes,8,opt,name=zone,proto3" json:"zone,omitempty"`
	// The machine type of this instance.
	// Currently custom machine types can be used
	// and there are no predefined machine types.
	//
	// Custom:
	// * define a custom machine type in the format 'custom-CPUS-MEMORY'
	// * CPUS must be 1 or an even number (2, 4, 6, ... 28, etc)
	// * MEMORY must be a multiple of 256 MB and must be supplied in MB (e.g. 3 GB is 3072 MB)
	//
	// which are defined like so:
	MachineType string `protobuf:"bytes,9,opt,name=machineType,proto3" json:"machineType,omitempty"`
	// Labels applied to the instance.
	Labels map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The metadata assigned to this instance.
	// This includes custom metadata and predefined keys.
	Metadata             map[string]string `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{0}
}

func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (m *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(m, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Instance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Instance) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Instance) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Instance) GetStatus() Instance_Status {
	if m != nil {
		return m.Status
	}
	return Instance_STATUS_UNSPECIFIED
}

func (m *Instance) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *Instance) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *Instance) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Instance) GetMachineType() string {
	if m != nil {
		return m.MachineType
	}
	return ""
}

func (m *Instance) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Instance) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// This operation resource represents an ongoing or finished operation happening or happened to the Instance.
// All fields are output only.
type Operation struct {
	// The server-assigned ID for the operation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The operation type.
	OperationType Operation_Type `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3,enum=dribs.cloud.compute.v1beta1.Operation_Type" json:"operation_type,omitempty"`
	// The current status of the operation.
	Status Operation_Status `protobuf:"varint,3,opt,name=status,proto3,enum=dribs.cloud.compute.v1beta1.Operation_Status" json:"status,omitempty"`
	// If an error has occurred, a textual description of the error.
	StatusMessage string `protobuf:"bytes,4,opt,name=status_message,json=statusMessage,proto3" json:"status_message,omitempty"`
	// Detailed operation progress, if available.
	Detail string `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	// The name of the zone in which the instance resides.
	Zone string `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	// The time when the operation started.
	StartTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The time when the operation completed.
	EndTime              *timestamp.Timestamp `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{1}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Operation) GetOperationType() Operation_Type {
	if m != nil {
		return m.OperationType
	}
	return Operation_TYPE_UNSPECIFIED
}

func (m *Operation) GetStatus() Operation_Status {
	if m != nil {
		return m.Status
	}
	return Operation_STATUS_UNSPECIFIED
}

func (m *Operation) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *Operation) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

func (m *Operation) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *Operation) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Operation) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

// CreateInstanceRequest creates an instance.
type CreateInstanceRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateInstanceRequest) Reset()         { *m = CreateInstanceRequest{} }
func (m *CreateInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInstanceRequest) ProtoMessage()    {}
func (*CreateInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7a04c0385a1d134f, []int{2}
}

func (m *CreateInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInstanceRequest.Unmarshal(m, b)
}
func (m *CreateInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInstanceRequest.Marshal(b, m, deterministic)
}
func (m *CreateInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInstanceRequest.Merge(m, src)
}
func (m *CreateInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateInstanceRequest.Size(m)
}
func (m *CreateInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInstanceRequest proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("dribs.cloud.compute.v1beta1.Instance_Status", Instance_Status_name, Instance_Status_value)
	proto.RegisterEnum("dribs.cloud.compute.v1beta1.Operation_Status", Operation_Status_name, Operation_Status_value)
	proto.RegisterEnum("dribs.cloud.compute.v1beta1.Operation_Type", Operation_Type_name, Operation_Type_value)
	proto.RegisterType((*Instance)(nil), "dribs.cloud.compute.v1beta1.Instance")
	proto.RegisterMapType((map[string]string)(nil), "dribs.cloud.compute.v1beta1.Instance.LabelsEntry")
	proto.RegisterMapType((map[string]string)(nil), "dribs.cloud.compute.v1beta1.Instance.MetadataEntry")
	proto.RegisterType((*Operation)(nil), "dribs.cloud.compute.v1beta1.Operation")
	proto.RegisterType((*CreateInstanceRequest)(nil), "dribs.cloud.compute.v1beta1.CreateInstanceRequest")
}

func init() { proto.RegisterFile("compute.proto", fileDescriptor_7a04c0385a1d134f) }

var fileDescriptor_7a04c0385a1d134f = []byte{
	// 702 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xef, 0x6e, 0xda, 0x3e,
	0x14, 0x6d, 0x42, 0xf8, 0x77, 0x53, 0xf8, 0x21, 0xff, 0xba, 0x2e, 0x62, 0xd2, 0x86, 0x90, 0x36,
	0x21, 0x6d, 0x0b, 0x2a, 0xd5, 0xa4, 0x76, 0xfd, 0x44, 0xc1, 0xad, 0x22, 0xb5, 0x01, 0x39, 0xe9,
	0xa4, 0xf5, 0x0b, 0x32, 0xc4, 0x63, 0xd9, 0x20, 0x61, 0x89, 0xa9, 0xd6, 0xed, 0x51, 0xf6, 0x8c,
	0x7b, 0x87, 0x29, 0x76, 0x82, 0xe8, 0x54, 0x01, 0xfb, 0xe6, 0x7b, 0x7c, 0xcf, 0xe1, 0xe6, 0x9e,
	0x63, 0xa0, 0x32, 0x09, 0xe7, 0x8b, 0x25, 0x67, 0xe6, 0x22, 0x0a, 0x79, 0x88, 0x9e, 0x79, 0x91,
	0x3f, 0x8e, 0xcd, 0xc9, 0x2c, 0x5c, 0x7a, 0x66, 0x76, 0x75, 0x77, 0x34, 0x66, 0x9c, 0x1e, 0xd5,
	0x5f, 0x4c, 0xc3, 0x70, 0x3a, 0x63, 0x6d, 0xd1, 0x3a, 0x5e, 0x7e, 0x6a, 0x73, 0x7f, 0xce, 0x62,
	0x4e, 0xe7, 0x0b, 0xc9, 0x6e, 0xfe, 0xce, 0x43, 0xc9, 0x0a, 0x62, 0x4e, 0x83, 0x09, 0x43, 0x55,
	0x50, 0x7d, 0xcf, 0x50, 0x1a, 0x4a, 0xab, 0x4c, 0x54, 0xdf, 0x43, 0x08, 0xb4, 0x80, 0xce, 0x99,
	0xa1, 0x0a, 0x44, 0x9c, 0x51, 0x03, 0x74, 0x8f, 0xc5, 0x93, 0xc8, 0x5f, 0x70, 0x3f, 0x0c, 0x8c,
	0x9c, 0xb8, 0x5a, 0x87, 0xd0, 0x19, 0xe8, 0x93, 0x88, 0x51, 0xce, 0x46, 0xc9, 0x8f, 0x19, 0x5a,
	0x43, 0x69, 0xe9, 0x9d, 0xba, 0x29, 0x27, 0x31, 0xb3, 0x49, 0x4c, 0x37, 0x9b, 0x84, 0x80, 0x6c,
	0x4f, 0x00, 0xd4, 0x87, 0x42, 0xcc, 0x29, 0x5f, 0xc6, 0x46, 0xbe, 0xa1, 0xb4, 0xaa, 0x9d, 0x37,
	0xe6, 0x86, 0xcf, 0x33, 0xb3, 0xc9, 0x4d, 0x47, 0x70, 0x48, 0xca, 0x45, 0x2f, 0xa1, 0x2a, 0x4f,
	0xa3, 0x39, 0x8b, 0x63, 0x3a, 0x65, 0x46, 0x41, 0xcc, 0x59, 0x91, 0xe8, 0xb5, 0x04, 0x93, 0x49,
	0xd9, 0xf7, 0x85, 0x1f, 0xa5, 0x93, 0x16, 0xb7, 0x4f, 0x2a, 0xdb, 0xc5, 0xa4, 0x08, 0xb4, 0x1f,
	0x61, 0xc0, 0x8c, 0x92, 0x5c, 0x4e, 0x72, 0x4e, 0x96, 0x33, 0xa7, 0x93, 0xcf, 0x7e, 0xc0, 0xdc,
	0xfb, 0x05, 0x33, 0xca, 0x72, 0x39, 0x6b, 0x10, 0xb2, 0xa0, 0x30, 0xa3, 0x63, 0x36, 0x8b, 0x0d,
	0x68, 0xe4, 0x5a, 0x7a, 0xe7, 0x68, 0xb7, 0xef, 0xbb, 0x12, 0x1c, 0x1c, 0xf0, 0xe8, 0x9e, 0xa4,
	0x02, 0x68, 0x00, 0xa5, 0x39, 0xe3, 0xd4, 0xa3, 0x9c, 0x1a, 0xba, 0x10, 0x3b, 0xde, 0x4d, 0xec,
	0x3a, 0x65, 0x49, 0xb9, 0x95, 0x48, 0xfd, 0x14, 0xf4, 0xb5, 0xdf, 0x41, 0x35, 0xc8, 0x7d, 0x65,
	0xf7, 0x69, 0x1c, 0x92, 0x23, 0x3a, 0x80, 0xfc, 0x1d, 0x9d, 0x2d, 0xb3, 0x40, 0xc8, 0xe2, 0xbd,
	0x7a, 0xa2, 0xd4, 0xcf, 0xa0, 0xf2, 0x40, 0xf5, 0x5f, 0xc8, 0xcd, 0x2f, 0x50, 0x90, 0xfe, 0xa1,
	0x43, 0x40, 0x8e, 0xdb, 0x75, 0x6f, 0x9c, 0xd1, 0x8d, 0xed, 0x0c, 0x71, 0xcf, 0xba, 0xb0, 0x70,
	0xbf, 0xb6, 0x87, 0x6a, 0xb0, 0x3f, 0x24, 0x83, 0x0f, 0x96, 0x63, 0x0d, 0x6c, 0xcb, 0xbe, 0xac,
	0x29, 0x48, 0x87, 0xa2, 0xe3, 0x76, 0x2f, 0x93, 0x42, 0x4d, 0x0a, 0x72, 0x63, 0x8b, 0x9b, 0x1c,
	0xda, 0x87, 0x92, 0xe3, 0x0e, 0x86, 0xc3, 0xa4, 0xd2, 0x50, 0x15, 0xc0, 0xc5, 0xe4, 0xda, 0xb2,
	0xbb, 0x2e, 0xee, 0xd7, 0xf2, 0xcd, 0x5f, 0x1a, 0x94, 0x07, 0x0b, 0x16, 0x51, 0x11, 0xd5, 0x2c,
	0xe0, 0xca, 0x5a, 0xc0, 0x09, 0x54, 0xc3, 0xac, 0x61, 0xc4, 0x13, 0x1b, 0x55, 0x91, 0xc4, 0xd7,
	0x1b, 0x97, 0xbb, 0xd2, 0x34, 0x13, 0x9b, 0x49, 0x65, 0x25, 0x21, 0x5c, 0xc7, 0xab, 0x54, 0xe7,
	0x84, 0xd6, 0xdb, 0x1d, 0xb5, 0xb6, 0xc6, 0x5a, 0x7b, 0x2c, 0xd6, 0x87, 0x50, 0xf0, 0x18, 0xa7,
	0xfe, 0x4c, 0xbc, 0xa1, 0x32, 0x49, 0xab, 0x55, 0x62, 0x0b, 0x6b, 0x89, 0x3d, 0x05, 0x88, 0x39,
	0x8d, 0xf8, 0xae, 0x2f, 0xa0, 0x2c, 0xba, 0xc5, 0x03, 0x78, 0x07, 0x25, 0x16, 0x78, 0x92, 0x58,
	0xda, 0x4a, 0x2c, 0xb2, 0xc0, 0x4b, 0xaa, 0x26, 0xd9, 0xea, 0xb6, 0x0e, 0xc5, 0x21, 0xb6, 0xfb,
	0x2b, 0xa3, 0x33, 0x6f, 0x55, 0x54, 0x02, 0xad, 0x3f, 0xb0, 0xb1, 0x74, 0xb9, 0x7b, 0x3e, 0x20,
	0xae, 0x70, 0xb9, 0x79, 0x01, 0x9a, 0xd8, 0xf3, 0x01, 0xd4, 0xdc, 0x8f, 0x43, 0xfc, 0x97, 0xde,
	0xff, 0xf0, 0x5f, 0x8f, 0xe0, 0xae, 0x8b, 0x47, 0x96, 0xed, 0xb8, 0x5d, 0xbb, 0x87, 0x6b, 0x4a,
	0x02, 0xf6, 0xf1, 0x15, 0x5e, 0x07, 0xd5, 0xe6, 0x53, 0x78, 0xd2, 0x13, 0xff, 0x45, 0xd9, 0x5b,
	0x21, 0xec, 0xdb, 0x92, 0xc5, 0xbc, 0xf3, 0x13, 0xca, 0x19, 0x14, 0xa3, 0x00, 0xaa, 0x0f, 0xbb,
	0x50, 0x67, 0xa3, 0x9f, 0x8f, 0x4a, 0xd6, 0x5f, 0xed, 0x96, 0x81, 0xe6, 0xde, 0xf9, 0x2d, 0x3c,
	0xf7, 0xc3, 0x4d, 0xdd, 0xb7, 0x27, 0xd3, 0xec, 0xde, 0x0f, 0xdb, 0x53, 0x16, 0x88, 0xfd, 0xb7,
	0x05, 0xd2, 0x16, 0x8c, 0x76, 0xca, 0x68, 0xa7, 0x8c, 0xb3, 0xb4, 0x1e, 0x17, 0x44, 0xeb, 0xf1,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xa2, 0xd3, 0xb5, 0x55, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InstancesClient is the client API for Instances service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InstancesClient interface {
	CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*Operation, error)
}

type instancesClient struct {
	cc *grpc.ClientConn
}

func NewInstancesClient(cc *grpc.ClientConn) InstancesClient {
	return &instancesClient{cc}
}

func (c *instancesClient) CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*Operation, error) {
	out := new(Operation)
	err := c.cc.Invoke(ctx, "/dribs.cloud.compute.v1beta1.Instances/CreateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InstancesServer is the server API for Instances service.
type InstancesServer interface {
	CreateInstance(context.Context, *CreateInstanceRequest) (*Operation, error)
}

func RegisterInstancesServer(s *grpc.Server, srv InstancesServer) {
	s.RegisterService(&_Instances_serviceDesc, srv)
}

func _Instances_CreateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InstancesServer).CreateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dribs.cloud.compute.v1beta1.Instances/CreateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InstancesServer).CreateInstance(ctx, req.(*CreateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Instances_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dribs.cloud.compute.v1beta1.Instances",
	HandlerType: (*InstancesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInstance",
			Handler:    _Instances_CreateInstance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "compute.proto",
}
